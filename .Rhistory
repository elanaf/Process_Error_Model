lr52 = log(.2),
lr53 = log(.008),
lr54 = log(.05),
lr55 = log(.03),
lr56 = log(.0006),
lr57 = log(.04),
lr58 = log(.03),
lr59 = log(.02),
lr60 = log(.003),
lr61 = log(.05),
lr62 = log(.008),
lr63 = log(.001),
lr64 = log(.04),
lr65 = log(.2),
lr66 = log(.2),
lr67 = log(.1),
lr68 = log(.00001),
lr69 = log(.2),
lr70 = log(.2),
lr71 = log(.15),
lr72 = log(.2),
lsd = log(.3),
ln01 = log(0.02),
ln02 = log(0.02))
# Create list of observed data for model
data.list<-list(obs=native.mat, species.vec = species.vec, ln0.vec = ln0.vec, method = "SANN")
# # Find MLE parameter estimates
fit_mp<-mle2(minuslogl=nll.multi.func.p,start=start.list,data=data.list, method = "SANN")
# # store MLE parameter estimates
cfs_mp<-exp(coef(fit_mp))
cfs_mp
## Predict historical dynamics from MLE parameter estimates####
pred_mp<-multi.func.p(r1 = cfs_mp[1], r2 = cfs_mp[2], r3 = cfs_mp[3],
r4 = cfs_mp[4], r5 = cfs_mp[5], r6 = cfs_mp[6],
r7 = cfs_mp[7], r8 = cfs_mp[8], r9 = cfs_mp[9],
r10 = cfs_mp[10], r11 = cfs_mp[11], r12 = cfs_mp[12],
r13 = cfs_mp[13], r14 = cfs_mp[14], r15 = cfs_mp[15],
r16 = cfs_mp[16], r17 = cfs_mp[17], r18 = cfs_mp[18],
r19 = cfs_mp[19], r20 = cfs_mp[20], r21 = cfs_mp[21],
r22 = cfs_mp[22], r23 = cfs_mp[23], r24 = cfs_mp[24],
r25 = cfs_mp[25], r26 = cfs_mp[26], r27 = cfs_mp[27],
r28 = cfs_mp[28], r29 = cfs_mp[29], r30 = cfs_mp[30],
r31 = cfs_mp[31], r32 = cfs_mp[32], r33 = cfs_mp[33],
r34 = cfs_mp[34], r35 = cfs_mp[35], r36 = cfs_mp[36],
r37 = cfs_mp[37], r38 = cfs_mp[38], r39 = cfs_mp[39],
r40 = cfs_mp[40], r41 = cfs_mp[41], r42 = cfs_mp[42],
r43 = cfs_mp[43], r44 = cfs_mp[44], r45 = cfs_mp[45],
r46 = cfs_mp[46], r47 = cfs_mp[47], r48 = cfs_mp[48],
r49 = cfs_mp[49], r50 = cfs_mp[50], r51 = cfs_mp[51],
r52 = cfs_mp[52], r53 = cfs_mp[53], r54 = cfs_mp[54],
r55 = cfs_mp[55], r56 = cfs_mp[56], r57 = cfs_mp[57],
r58 = cfs_mp[58], r59 = cfs_mp[59], r60 = cfs_mp[60],
r61 = cfs_mp[61], r62 = cfs_mp[62], r63 = cfs_mp[63],
r64 = cfs_mp[64], r65 = cfs_mp[65], r66 = cfs_mp[66],
r67 = cfs_mp[67], r68 = cfs_mp[68], r69 = cfs_mp[69],
r70 = cfs_mp[70], r71 = cfs_mp[71], r72 = cfs_mp[72],
n01 = cfs_mp[73], n02 = cfs_mp[74],
obs = native.mat, species.vec = species.vec, ln0.vec = ln0.vec)
plot(native.mat, pred_mp, xlab = "Observed", ylab = "Predicted",pch = 16, las = 1, ylim = c(0,1))
abline(0, 1) # Add 1:1 line on figure indicating perfect fit
summary(lm(as.vector(native.mat) ~ as.vector(pred_mp)))
mtext("R2 = 0.92", side=3)
ggsave("all_2n0s.jpeg")
?ggsave
wd()
ggsave(plot = last_plot(), "all_2n0s.jpeg", device = "jpeg")
#only select columns that I need for the analysis
native.dat <- greenhouse %>%
filter(Species != "PHAU") %>%
select(Species, Block, Density, Phrag_Presence, Date_Cleaned, Cover.Native)  %>%
arrange(Species,Density, Phrag_Presence) #put same species next to each other
#but I have to change the name of the extra BICE and SCAM
native.dat$Block <- as.numeric(native.dat$Block)
native.dat[3,2] <- 4
native.dat[7,2] <- 4
native.dat[11,2] <- 4
native.dat[15,2] <- 4
native.dat[683, 2] <- 4
native.dat[687, 2] <- 4
native.dat[691, 2] <- 4
native.dat[695, 2] <- 4
native.dat$ID_Col <- with(native.dat, paste0(Species, Density, Phrag_Presence, Block))
#rearrange so date is column
native.dat <- reshape2::dcast(native.dat, ID_Col ~ Date_Cleaned, value.var = "Cover.Native")
native.dat$r_value <- species.vec
data_read <- data.frame(NA, nrow = 72, ncol = 5)
data_read
?data.frame
data_read <- greenhouse %>%
filter(Species != "PHAU") %>%
select(Species, Block, Density, Phrag_Presence)  %>%
arrange(Species,Density, Phrag_Presence) #put same species next to each other
data_read
data_read <- data.frame(Species = unique(greenhouse$Species))
data_read
#only select columns that I need for the analysis
native.dat <- greenhouse %>%
filter(Species != "PHAU") %>%
select(Species, Block, Density, Phrag_Presence, Date_Cleaned, Cover.Native)  %>%
arrange(Species,Density, Phrag_Presence) #put same species next to each other
#but I have to change the name of the extra BICE and SCAM
native.dat$Block <- as.numeric(native.dat$Block)
native.dat[3,2] <- 4
native.dat[7,2] <- 4
native.dat[11,2] <- 4
native.dat[15,2] <- 4
native.dat[683, 2] <- 4
native.dat[687, 2] <- 4
native.dat[691, 2] <- 4
native.dat[695, 2] <- 4
native.dat$ID_Col <- with(native.dat, paste0(Species, Density, Phrag_Presence, Block))
#rearrange so date is column
native.dat <- reshape2::dcast(native.dat, ID_Col ~ Date_Cleaned, value.var = "Cover.Native")
#only select columns that I need for the analysis
native.dat <- greenhouse %>%
filter(Species != "PHAU") %>%
select(Species, Block, Density, Phrag_Presence, Date_Cleaned, Cover.Native)  %>%
arrange(Species,Density, Phrag_Presence) #put same species next to each other
#but I have to change the name of the extra BICE and SCAM
native.dat$Block <- as.numeric(native.dat$Block)
native.dat[3,2] <- 4
native.dat[7,2] <- 4
native.dat[11,2] <- 4
native.dat[15,2] <- 4
native.dat[683, 2] <- 4
native.dat[687, 2] <- 4
native.dat[691, 2] <- 4
native.dat[695, 2] <- 4
native.dat$ID_Col <- with(native.dat, paste0(Species, Density, Phrag_Presence, Block))
#rearrange so date is column
data_read <- unique(native.dat)
View(data_read)
data_read <- data.frame(unique(native.dat$Species))
#this will be difficult to reproduce
data_read <- native.dat
#this will be difficult to reproduce
data_read <- native.dat[Species:Phrag_Presence]
#this will be difficult to reproduce
data_read <- native.dat$Species:native.dat$Phrag_Presence
#this will be difficult to reproduce
data_read <- native.dat %>%
select(Species:Phrag_Presence)
#this will be difficult to reproduce
data_read <- native.dat %>%
select(Species, Density, Phrag_Presence) %>%
group_by()
?rep
#this will be difficult to reproduce
species <- unique(native.dat$Species)
species
data_read <- rep(species, each = 4)
data_read <- data.frame(Species = rep(species, each = 4))
data_read$Density <- rep(c("H", "L"), each = 4)
data_read$Density <- rep(c("H", "L"))
data_read$Phrag_Presence <- rep("W", "WO")
data_read$Phrag_Presence <- rep(c("W", "WO"))
data_read$Density <- rep(c("H", "L"), each = 2)
data_read$Phrag_Presence <- rep(c("W", "WO"))
data_read$r_num <- rep(1:18, each = 4)
data_read$r_num <- 1:72
data_read$value <- rep(NA, 72)
i <- 3
r[i]
cfs_mp
cfs_mp[1]
cfs_mp[i]
for(i in 1:72){
data_read[i, 5] <- cfs_mp[i]
}
cfs_mp[1]
cfs_mp[4]
cfs_mp[66]
cfs_mp[68]
write.csv(data_read)
getwd()
write.csv(data_read, "/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Process_Error_model")
write.csv(data_read,
"/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Process_Error_model",
row.names = FALSE)
?write.csv
write.csv(data_read,
file = "/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Process_Error_model",
row.names = FALSE)
library(gridExtra)
?jpeg
jpeg("r_value_date.jpeg")
grid.table(data_read)
dev.off()
?grid.table
tableGrob(d = data_read, cols = c("Species", "Density", "Phrag Presence", "r[i]", "Value"))
?jpeg
jpeg("r_value_data.jpeg", height = 1000, width = 1000)
grid.table(data_read)
dev.off()
jpeg("r_value_data.jpeg", height = 2000, width = 500)
grid.table(data_read)
dev.off()
jpeg("r_value_data.jpeg", height = 1500, width = 400)
grid.table(data_read)
dev.off()
save(data_read, file = "r_values_table.RData")
load("r_values_table.RData")
View(r_values_table
)
View(read_table)
View(read_data)
load("~/Documents/USUClasses/Thesis_Code/Process_Error_model/r_values_table.RData")
r_values_tabel
r_values_table
read_data
View(data_read)
load("r_values_table.RData")
View(data_read)
library(tidyverse)
load("main_dfs.RData")
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
View(final.traits)
r_table <- data_read
r_table %>%
mutate(trt = paste("Density", "Phrag_Presence"))
r_table %>%
mutate(trt = paste(Density, Phrag_Presence))
?paste
r_table %>%
mutate(trt = paste0(Density, Phrag_Presence))
r_table <- r_table %>%
mutate(trt = as.factor(paste0(Density, Phrag_Presence)))
View(r_table)
class(r_table$trt)
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point() +
facet_wrap(~Species)
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence),
size = 3) +
geom_point() +
facet_wrap(~Species)
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 3) +
facet_wrap(~Species)
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species)
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species) +
theme(axis.text.x = element_text(angle = 45, hjust = 0.9))
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species) +
theme(axis.text.x = element_blank())
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species) +
theme(axis.text.x = element_blank()) +
labs(x = "", y = "r Value")
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species) +
theme(axis.text.x = element_blank(),
axis.ticks = element_blank()) +
labs(x = "", y = "r Value")
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(x = "", y = "r Value")
ggsave("r-value_by-species.jpeg")
final.all <- left_join(final, r_table, by = c("Species", "Density"))
View(final.all)
filter(final.all, Species == "JUGE")
filter(final.all, Species == "JUGE", trt == "HW")
filter(final.all, Species == "JUGE", trt == "HWO")
filter(final.all, Species == "JUGE", trt == "LWO")
filter(final.all, Species == "JUGE", trt == "LW")
final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2)
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(x = "", y = "Growth Rate (r)")
ggsave("r-value_by-species.jpeg")
final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass")
final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass") +
theme(axis.title.y = ggtext::element_markdown())
final.all %>%
ggplot(aes(x = value, y = Cover.Phrag, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Cover") +
theme(axis.title.y = ggtext::element_markdown())
lm_cover_cover <- lm(value ~ Phrag.Biomass + Density, data = final.all)
lm_biomass <- lm(value ~ Phrag.Biomass + Density, data = final.all)
summary(lm_biomass)
emmeans(lm_biomass, pairwise~Density)
library(emmeans)
emmeans(lm_biomass, pairwise~Density)
final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass") +
theme(axis.title.y = ggtext::element_markdown()) +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass") +
theme(axis.title.y = ggtext::element_markdown()) +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
cor(final.all$Phrag.Biomass, final.all$value, method = "pearson", use = "complete.obs")
ggsave("r_biomass.jpeg")
lm_cover <- lm(value ~ Cover.Phrag + Density, data = final.all)
summary(lm_cover)
emmeans(lm_cover, pairwise~Density)
cor(final.all$Phrag.Biomass, final.all$value, method = "pearson", use = "complete.obs")
cor(final.all$Cover.Phrag, final.all$value, method = "pearson", use = "complete.obs")
final.all %>%
ggplot(aes(x = value, y = Cover.Phrag, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Cover") +
theme(axis.title.y = ggtext::element_markdown())+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
ggsave("r_cover.jpeg")
summary(lm_biomass)
emmeans(lm_biomass, pairwise~Density)
lm_biomass_biomass <- lm(Phrag.Biomass ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_biomass)
summary(lm_cover)
a <- final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass") +
theme(axis.title.y = ggtext::element_markdown()) +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
load("r_values_table.RData")
load("main_dfs.RData")
View(data_read)
library(tidyverse)
library(emmeans)
a <- final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass") +
theme(axis.title.y = ggtext::element_markdown()) +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
load("r_values_table.RData")
load("main_dfs.RData")
View(data_read)
library(tidyverse)
library(emmeans)
r_table <- data_read
# Graphs of the changes in r by species ####
r_table <- r_table %>%
mutate(trt = as.factor(paste0(Density, Phrag_Presence)))
r_table %>%
ggplot(aes(x = trt, y = value, color = Density, shape = Phrag_Presence)) +
geom_point(size = 2) +
facet_wrap(~Species) +
theme(axis.text.x = element_blank(),
axis.ticks.x = element_blank()) +
labs(x = "", y = "Growth Rate (r)")
ggsave("r-value_by-species.jpeg")
# Get the cover and biomass data ####
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, r_table, by = c("Species", "Density"))
# Relationship between r value and phrag biomass ####
lm_biomass <- lm(value ~ Phrag.Biomass + Density, data = final.all)
summary(lm_biomass)
#relationship is significant for both r value and density
#r value shows negative relationship (p < 2e-16)
#over all r2 = .36
#density is significant relationship (p = 0.00659)
#phrag cover intercept lower in low density - not sure how to interpret that
cor(final.all$Phrag.Biomass, final.all$value, method = "pearson", use = "complete.obs")
#negative correlation of -0.586
a <- final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass") +
theme(axis.title.y = ggtext::element_markdown()) +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
# Relationship between r values and phrag cover ####
lm_cover <- lm(value ~ Cover.Phrag + Density, data = final.all)
summary(lm_cover)
#relationship is significant for both r value and density
#r value shows negative relationship (p < 2e-16)
#over all r2 = .37
#density is significant relationship (p = 0.0253)
#biomass coefficient lower in lower density - not sure how to interpret that
cor(final.all$Cover.Phrag, final.all$value, method = "pearson", use = "complete.obs")
#negative correlation of -0.597
b <- final.all %>%
ggplot(aes(x = value, y = Cover.Phrag, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Cover") +
theme(axis.title.y = ggtext::element_markdown())+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
a + b
library(patchwork)
a + b
?legend
a <- final.all %>%
ggplot(aes(x = value, y = Phrag.Biomass, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Biomass") +
theme(axis.title.y = ggtext::element_markdown(),
legend.position = "none") +
geom_smooth(method="lm", se=FALSE, fullrange = TRUE) +
ylim(0, 50)
a
a + b
b <- final.all %>%
ggplot(aes(x = value, y = Cover.Phrag, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Cover") +
theme(axis.title.y = ggtext::element_markdown(),
legend.position = "none")+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
a + b
b <- final.all %>%
ggplot(aes(x = value, y = Cover.Phrag, color = Density)) +
geom_point(size = 2) +
labs(x = "Growth Rate (r)", y = "*Phragmites* Cover") +
theme(axis.title.y = ggtext::element_markdown())+
geom_smooth(method="lm", se=FALSE, fullrange = TRUE)
a + b
ggsave("growth-rate_biomass_cover.jpeg")
#Call objects
load("main_dfs.RData")
func_group <- read.csv("/Users/elanafeldman/Documents/USUClasses/Thesis_Code/Greenhouse2022/Cleaned_Data/Groups_Final.csv")
##Graphing
library(ggplot2)
library(magrittr)
library(dplyr)
library(patchwork)
#using the full dataset
final.traits <- greenhouse %>%
filter(Date_Cleaned == "2022-05-16" & Phrag_Presence == "W") %>%
select(Species, Block, Density, Cover.Native, Height.Native, Cover.Phrag)
final.biomass <- biomass %>%
filter(Phrag_Presence == "W") %>%
select(Species, Block, Density, Native.Biomass, Phrag.Biomass)
final <- left_join(final.traits, final.biomass, by = c("Species", "Density", "Block"))
final.all <- left_join(final, func_group, by = c("Species"))
lm_cover_biomass <- lm(Cover.Phrag ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_cover_biomass)
lm_cover_cover <- lm(Cover.Phrag ~ Cover.Native + Density + Group, data = final.all)
summary(lm_cover_cover)
lm_biomass_biomass <- lm(Phrag.Biomass ~ Native.Biomass + Density + Group, data = final.all)
summary(lm_biomass_biomass)
#group seems to be significant for this one but only this one - bulrush, rush (make sense because they are 0), and grass (idk...)
emmeans(lm_biomass_biomass, pairwise~Group)
library(emmeans)
#group seems to be significant for this one but only this one - bulrush, rush (make sense because they are 0), and grass (idk...)
emmeans(lm_biomass_biomass, pairwise~Group)
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Phrag.Cover, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Cover.Phrag, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Cover.Phrag, final.all$Native.Cover,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Cover.Phrag, final.all$Cover.Native,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Phrag.Biomass, final.all$Cover.Native,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Phrag.Biomass, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor(final.all$Phrag.Biomass, final.all$Native.Biomass, method = "pearson", use = "complete.obs")
cor.test(final.all$Cover.Phrag, final.all$Native.Biomass,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Cover.Phrag, final.all$Cover.Native,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
cor.test(final.all$Phrag.Biomass, final.all$Cover.Native,
method = "pearson", use = "complete.obs", exact = FALSE, conf.int = TRUE)
